(()=>{var e={};e.id=786,e.ids=[786],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},1700:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>I,routeModule:()=>d,serverHooks:()=>x,workAsyncStorage:()=>g,workUnitAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{GET:()=>p,POST:()=>l});var n=r(6559),o=r(8088),i=r(7719),u=r(2190),a=r(7449);class c{constructor(){let e=process.env.GOOGLE_GENERATIVE_AI_API_KEY;if(!e)throw Error("GOOGLE_GENERATIVE_AI_API_KEY is not set");this.genAI=new a.ij(e);let t=process.env.GENERATIVE_MODEL||"models/gemini-2.5-flash";try{this.model=this.genAI.getGenerativeModel({model:t,generationConfig:{temperature:.3,topK:20,topP:.8,maxOutputTokens:512}})}catch(e){throw console.error("KeigoJudgeService: failed to initialize model",{modelName:t,error:e}),Error(`failed to initialize model: ${t}`)}}async analyzeKeigo(e){let t=this.createPrompt(e),r=null;for(let e=1;e<=2;e++)try{console.log(`Gemini API 呼び出し試行 ${e}/2`),e>1&&await new Promise(t=>setTimeout(t,2e3*e));let r=(await this.model.generateContent(t)).response.text();return console.log("Gemini API 成功:",r.substring(0,100)+"..."),this.parseResponse(r)}catch(t){if(r=t instanceof Error?t:Error(String(t)),console.error(`Gemini API エラー (試行 ${e}):`,r.message),r.message.includes("503")&&e<2){console.log(`Gemini API 過負荷エラー。${2e3*e}ms後にリトライします...`);continue}break}throw r||Error("Gemini API呼び出しに失敗しました")}createPrompt(e){return`
以下の日本語文章の敬語使用を分析してください。

文章: "${e.userInput}"
状況: ${e.situation}

以下のJSON形式で簡潔に回答してください（必ず「正しい敬語表現例」を含めてください）：
{
  "isCorrect": true/false,
  "category": "尊敬語"/"謙譲語"/"丁寧語"/"普通語"/"不適切",
  "score": 0-100の数値,
  "explanation": "簡潔な説明（50文字以内）",
  "suggestion": "改善提案（あれば）",
  "correctExample": "最も正しい敬語表現例"
}
`}parseResponse(e){try{let t=e.indexOf("{"),r=e.lastIndexOf("}")+1;if(-1===t||0===r)throw Error("JSONが見つかりません");let s=e.substring(t,r),n=JSON.parse(s);return{isCorrect:n.isCorrect||!1,category:n.category||"不適切",score:Math.max(0,Math.min(100,n.score||0)),explanation:n.explanation||"分析結果を取得できませんでした",suggestion:n.suggestion,examples:n.examples||[]}}catch(e){return console.error("Response parsing error:",e),{isCorrect:!1,category:"不適切",score:0,explanation:"レスポンスの解析に失敗しました",suggestion:"再度お試しください",examples:[]}}}getScenarios(){return[{id:"business-meeting",title:"ビジネス会議",context:"重要な商談の場面",situation:"上司と顧客が同席している会議室"},{id:"customer-service",title:"顧客対応",context:"お客様からの問い合わせ対応",situation:"電話での顧客サービス"},{id:"email-writing",title:"メール作成",context:"社外への重要なメール",situation:"取引先への提案メール"},{id:"presentation",title:"プレゼンテーション",context:"役員への報告",situation:"四半期業績発表会"}]}}async function l(e){try{let s=await e.json();if(!s.userInput||!s.context||!s.situation)return u.NextResponse.json({error:"必要な情報が不足しています"},{status:400});console.log("Analyzing keigo:",s.userInput);let n=new Promise((e,t)=>{setTimeout(()=>t(Error("Request timeout")),3e4)}),o=new c;try{let e=await Promise.race([o.analyzeKeigo(s),n]);return console.log("Analysis completed successfully"),u.NextResponse.json(e)}catch(o){var t,r;let e;console.error("Gemini API Error:",o);let n={isCorrect:s.userInput.includes("です")||s.userInput.includes("ます")||s.userInput.includes("ございます"),category:s.userInput.includes("いらっしゃる")||s.userInput.includes("なさる")?"尊敬語":s.userInput.includes("申し上げ")||s.userInput.includes("させていただ")?"謙譲語":s.userInput.includes("です")||s.userInput.includes("ます")?"丁寧語":"普通語",score:(t=s.userInput,e=50,(t.includes("です")||t.includes("ます"))&&(e+=20),t.includes("ございます")&&(e+=15),(t.includes("いらっしゃる")||t.includes("なさる"))&&(e+=10),(t.includes("申し上げ")||t.includes("させていただ"))&&(e+=10),Math.min(100,e)),explanation:"⚠️ AI分析は一時的に利用できません。簡易判定: "+((r=s.userInput).includes("ございます")?"丁寧語が適切に使用されています。":r.includes("です")||r.includes("ます")?"基本的な丁寧語が使用されています。":"丁寧語の使用をお勧めします。"),suggestion:function(e){if(!e.includes("です")&&!e.includes("ます")&&!e.includes("ございます"))return"文末に「です・ます」を追加してより丁寧な表現にしてみてください。"}(s.userInput)};return u.NextResponse.json(n)}}catch(e){return console.error("API Error:",e),u.NextResponse.json({error:"サーバーエラーが発生しました"},{status:500})}}async function p(){try{let e=new c().getScenarios();return u.NextResponse.json({scenarios:e})}catch(e){return console.error("API Error:",e),u.NextResponse.json({error:"シナリオの取得に失敗しました"},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/analyze/route",pathname:"/api/analyze",filename:"route",bundlePath:"app/api/analyze/route"},resolvedPagePath:"C:\\00pro\\keigo\\src\\app\\api\\analyze\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:g,workUnitAsyncStorage:m,serverHooks:x}=d;function I(){return(0,i.patchFetch)({workAsyncStorage:g,workUnitAsyncStorage:m})}},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580,449],()=>r(1700));module.exports=s})();